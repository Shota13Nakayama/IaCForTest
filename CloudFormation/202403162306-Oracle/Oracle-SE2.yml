AWSTemplateFormatVersion: 2010-09-09
#####################################################
#
# 202403170005
# Oracle19c-SE2
# db.t3.small
# エンジンバージョン
# 19.0.0.0.ru-2024-01.rur-2024-01.r1
# vCPU : 2
#  RAM : 2 GB
# sample : https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/quickref-rds.html
#####################################################
#
#####################################################
# Parameters: スタック作成時に設定する変数値
#####################################################
Parameters:
  EC2KeyName:
    Description: Key name of the EC2 key pair
    Type: AWS::EC2::KeyPair::KeyName

  DBName:
    Description: Please enter the name of the DatabaseInstance on an RDS.
    Type: String
    Default: ORCL

  DBMasterUserName:
    Description: Please enter the name of the master user on an RDS.
    Type: String
    Default: master

  DBMasterUserPassword:
    Description: Please enter the password of the master user on an RDS. That should be greater or equal to 8 characters.
    Type: String
    Default: testdbpass
    NoEcho: true

  DBOptoinGroupName:
    Description: Choose Oracle Parameter Group for S3 Integration
    Type: String
    Default: oraclese2-og-s3-integration
    
  IAMRoleARNRDS:
    Description: RDS IAM Role for S3 Integration
    Type: String
    Default: arn:aws:iam::019141493675:role/s3-oracle-integration-test-role

  VpcSubnet:
    Description: AP VPC subnet
    Type: String
    Default: 10.0.0.0/16
    
  TestSubnetGroupName:
    Description: TestSubnetGroupName
    Type: String
    Default: test-subnet-group

  EC2InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro

  InstanceProfileName:
    Description: Name of the IAM instance profile to attach to the EC2 instance.
    Type: String
    Default: S3-EC2-integration-test-role

#####################################################
# Mappings
#####################################################
Mappings:
  Constant:
    RDS:
      DatabaseName: oracledb
      InstanceName: test-oracle-instance1
      InstanceType: db.t3.small


#####################################################
# Resource
#####################################################

#####################################################
#  VPC section
#####################################################
Description: Create VPC
Resources:
  TestVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcSubnet
      Tags:
        - Key: Name
          Value: TestVPC

#####################################################
#  Subnet section
#####################################################

  TestPrivateSub1a:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [0, !Cidr [!GetAtt TestVPC.CidrBlock, 2, 8]] #10.0.0.0/24
      MapPublicIpOnLaunch: false
      VpcId: !Ref TestVPC
      AvailabilityZone: us-east-2a
      Tags:
        - Key: Name
          Value: TestPrivateSub1a

  TestPrivateSub1c:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [1, !Cidr [!GetAtt TestVPC.CidrBlock, 2, 8]] #10.0.1.0/24
      MapPublicIpOnLaunch: false
      VpcId: !Ref TestVPC
      AvailabilityZone:  us-east-2b
      Tags:
        - Key: Name
          Value: TestPrivateSub1c

  TestSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupName: !Ref TestSubnetGroupName
        DBSubnetGroupDescription: Subnets available for the RDS DB Instance
        SubnetIds:
          - !Ref TestPrivateSub1a
          - !Ref TestPrivateSub1c

#####################################################
#  SecurityGroup section
#####################################################

  TestSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref "TestVPC"
      GroupDescription: Allow RDS Connection From TCP 5432 Port
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1521
          ToPort: 1521
          CidrIp: !GetAtt "TestVPC.CidrBlock"
      Tags:
        - Key: Name
          Value: TestSecurityGroup

#####################################################
#  Oracle section
#####################################################
  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBSubnetGroupName: !Ref "TestSubnetGroup"
      VPCSecurityGroups:
        - !Ref "TestSecurityGroup"
      DBName: !Ref DBName
      Engine: oracle-se2
      # EngineVersion: 19.0.0.0.ru-2024-01.rur-2024-01.r1
      # Minimum AllocatedStorage 20GB
      AllocatedStorage: '20'
      DBInstanceClass: !FindInMap [Constant, RDS, InstanceType]
      Port: '1521'
      MultiAZ: 'false'
      MasterUsername: !Ref "DBMasterUserName"
      MasterUserPassword: !Ref "DBMasterUserPassword"
      LicenseModel: bring-your-own-license
      StorageEncrypted: 'true'
      #ManageMasterUserPassword: true
      #MasterUserSecret:
      #  KmsKeyId: !Ref KMSKey
      EnablePerformanceInsights: true
      DBParameterGroupName: !Ref OrclRDSParamGroup
      OptionGroupName: !Ref DBOptoinGroupName
      AssociatedRoles:
        - RoleArn: !Ref IAMRoleARNRDS
          FeatureName: "S3_INTEGRATION"
      BackupRetentionPeriod: 0
    #DeletionPolicy: Snapshot
  OrclRDSParamGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Family: oracle-se2-19
      Description: Oracle DB Parameter Group
      Parameters:
        compatible: 19.0.0.0

#####################################################
# EC2 section (DBクライアント)
#####################################################

  # Public Subnet
  TestPublicSub:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [2, !Cidr [!GetAtt TestVPC.CidrBlock, 4, 8]] # Example: 10.0.2.0/24
      VpcId: !Ref TestVPC
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-2c
      Tags:
        - Key: Name
          Value: TestPublicSub

  # Public Subnet Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TestVPC

  # Associate Public Subnet with Route Table
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref TestPublicSub
      RouteTableId: !Ref PublicRouteTable

  # Internet Gateway for Public Subnet
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  # Attach Internet Gateway to VPC
  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref TestVPC
      InternetGatewayId: !Ref InternetGateway

  # Route to Internet Gateway
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Security Group for EC2 in Public Subnet
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref TestVPC
      GroupDescription: Enable SSH access to EC2 instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  # EC2 Instance in Public Subnet
  MyEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref EC2InstanceType
      KeyName: !Ref EC2KeyName
      ImageId: ami-0866a04d72a1f5479 # Replace with the correct AMI ID for your region and OS
      SubnetId: !Ref TestPublicSub
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      IamInstanceProfile: !Ref InstanceProfileName
